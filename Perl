#!C:\Perl64\bin\perl.exe

#Descarga los archivos del servidor, los descomprime (sobreescribiendo lo que saca).
#Se conectan todos a la bbdd (local).
#historial esta listo
#5 dias esta listo
#Queda lograr automatizarlo todo (maquina virtual?)

use strict;
use warnings;
use strict;
use LWP::Simple;
use utf8;
use Archive::Zip qw( :ERROR_CODES :CONSTANTS );
use DBI;
use Switch;

#conocemos e imprimimos el dia corriente en cuestion
#esto servira para crear y eliminar los backup solicitados (con su respectivo nombre)
my ($sec,$min,$hour,$mday,$mon,$year,$wday,$yday,$isdst) = localtime(time);
$year += 1900;
$mon++;
print "$mday/$mon/$year $hour:$min:$sec\n";


#aqui se busca el nombre del archivo viejo si existiera
my $rootdir = 'C:\Users\Juan Nahuel Hidalgo\Desktop\Gral\paradigmas\2dotp\txt\infodiariac.txt';
unlink ($rootdir);


#aqui se almacena el archivo (no es necesario eliminar el viejo porque se sobreescribe)
my $urldiaria = 'https://ssl.smn.gob.ar/dpd/zipopendata.php?dato=tiepre';
my $archivodiario = 'diaria' . '.zip';
getstore( $urldiaria, $archivodiario );


#se extrae el archivo
my $zip = Archive::Zip->new($archivodiario);
my $destinationDirectory = 'C:\Users\Juan Nahuel Hidalgo\Desktop\Gral\paradigmas\2dotp\txt';
foreach my $member ($zip-> members)
{
    next if $member->isDirectory;
    (my $extractName = $member->fileName) =~ s{.*/}{};
    $member->extractToFileNamed(
      "$destinationDirectory/infodiaria.txt");   
}


#generamos nuestra base de datos con sus puertos, usuario, pw y nombre
 my $dbname3 = 'diario';
 my $dbhost = '127.0.0.1';
 my $dbuser = 'root';
 my $dbpwd = '';
 #nos conectamos y la preparamos para agregar los datos
 my $dbh3 = DBI->connect("DBI:mysql:database=$dbname3;host=$dbhost", $dbuser, $dbpwd, {RaiseError => 1});
 
 my $sth3 = $dbh3->prepare(
         "INSERT INTO `diario2`(`nombre`, fecha, hora, tiempo, visibilidad, n1, n2, n3, direccion, n4)
         VALUES (?,?,?,?,?,?,?,?,?,?)"
         );
 

$dbh3 -> do ("truncate table diario2");

#si dropeamos la tabla en vez de truncarla lo de abajo tiene que estar.
#$dbh3 -> do("CREATE TABLE diario2 (nombre VARCHAR(30) PRIMARY KEY, fecha DATE, hora TIME, tiempo varchar(30), visibilidad int, n1 float, n2 float, n3 int, direccion varchar (30), n4 float)");


#abrimos y parseamos el archivo
open (FILE, 'C:\Users\Juan Nahuel Hidalgo\Desktop\Gral\paradigmas\2dotp\txt\infodiaria.txt') || die "Can't open this shit";; 
while (<FILE>) {
  chomp;

  
  #declaramos las variables que usaremos a la hora de parsear la informacion
  my $namediario;
  my $fechamal;
  my $horamal;
  my $tiempo,
  my $visibilidad;
  my $n1;
  my $n2;
  my $direccion;
  my $n3;
  my $n4;
  ($namediario, $fechamal, $horamal, $tiempo, $visibilidad, $n1, $n2, $n3, $direccion, $n4) = split(";");
   

 #puede ser sustituido por la linea del else todo el switch pero dejaria de ser parseo 100%
 my @fecha; 
 @fecha = split(/-/,$fechamal);
 switch($fecha[1]) {
    case ("enero")            { $fecha[1] = 1;}
    case ("febrero")          { $fecha[1] = 2; }
    case ("marzo")          {$fecha[1] = 3; }
    case ("abril")          { $fecha[1] = 4; }
    case ("mayo")          {$fecha[1] = 5; }
    case ("junio")          { $fecha[1] = 6; }
    case ("julio")          { $fecha[1] = 7; }
    case ("agosto")          { $fecha[1] = 8;  }
    case ("septiembre")          { $fecha[1] = 9; }
    case ("octubre")          { $fecha[1] = 10; }
    case ("noviembre")          { $fecha[1] = 11; }
    case ("diciembre")          { $fecha[1] = 12; }
    else              { $fecha[1] = $mon;  }
}
my $fechabien = "$fecha[2]/$fecha[1]/$fecha[0]";


#generamos una hora acorde a la bbdd
my @horas; 
@horas = split(/:/,$horamal);
my $horabien = "$horas[0]:$horas[1]:$horas[1]";


#el siguiente comando introduce el valor a la bbdd en el orden de preparado
$sth3->execute($namediario, $fechabien, $horabien, $tiempo, $visibilidad, $n1, $n2, $n3, $direccion, $n4);
}
 close (FILE);
#Desconectar la base de datos
$dbh3->disconnect();
#.............................................................................
#.............................................................................
#.............................................................................
#.............................................................................
my $urldatosmet = 'https://ssl.smn.gob.ar/dpd/zipopendata.php?dato=datohorario';
my $historial = 'hist' . '.zip';
getstore( $urldatosmet, $historial );
#aqui se almacena el archivo
my $zip3 = Archive::Zip->new($historial);
foreach my $member ($zip3-> members)
{
    next if $member->isDirectory;
    (my $extractName = $member->fileName) =~ s{.*/}{};
    $member->extractToFileNamed(
      "$destinationDirectory/historial.txt");
}
#se extrae el archivo

#generamos nuestra base de datos, sus puertos, usuario, pw y nombre ya fueron creados
my $dbname2 = 'historial';
#nos conectamos y la preparamos para agregar los datos
my $dbh2 = DBI->connect("DBI:mysql:database=$dbname2;host=$dbhost", $dbuser, $dbpwd, {RaiseError => 1});
my $sth2 = $dbh2->prepare(
         "INSERT INTO `historial`(`fecha`, `hora`, `temp`, `hum`, `pnm`, `dd`, `ff`, `nombre`)
         VALUES (?,?,?,?,?,?,?,?)"
        #FECHA     HORA  TEMP   HUM   PNM    DD    FF     NOMBRE 
         );
$dbh2 -> do ("truncate table historial");

 #vamos a leer linea a linea el archivo original y el nuevo
 my $linea2;
#abrimos y quitamos de en medio todo lo que no nos sirve del mismo escribiendo un nuevo archivo
open (OUT, '>C:\Users\Juan Nahuel Hidalgo\Desktop\Gral\paradigmas\2dotp\txt\historial2.txt') || die "Can't open this shit1";
open (FILE, 'C:\Users\Juan Nahuel Hidalgo\Desktop\Gral\paradigmas\2dotp\txt\historial.txt') || die "Can't open this shit2";
while ($linea2= <FILE>) {
  chomp($linea2);
  
 
#quitamos distintas cosas molestas (esto puede ser mejorado pero no encontre la forma)
$linea2 =~ s/FECHA     HORA  TEMP   HUM   PNM    DD    FF     NOMBRE                                             //g;
$linea2 =~ s/          //g;
$linea2 =~ s/[\[\]]//g;
my $o = "HOA  ÂºC   %  hPa  gr km/hr    ";
$linea2 =~ s/$o//g;

 
  print OUT $linea2;
}
 close (FILE);
 close (OUT);
 
 #Abrimos el archivo ya procesado para parsear
open (FILE, 'C:\Users\Juan Nahuel Hidalgo\Desktop\Gral\paradigmas\2dotp\txt\historial2.txt') || die "Can't open this shit";
while ($linea2 = <FILE>) {
  chomp($linea2);

 #llenaremos un array con cada conjunto de caracteres separados por un espacio
 my @palabras2 = split(/\s+/, $linea2);
 
 #se realiza un arreglo rapido del array cuyo coste es menor que realizarlo con una expresion regular.
for my $n (0 .. 5){
shift(@palabras2);
}


my $indicepas1 = 0;
my $indice_ref = \$indicepas1;
my $indiceact1 = 0;
my $indicea_ref = \$indiceact1;

my $vreg1 = 0;
my $vreg_ref = \$vreg1;

for my $a(0 .. 2){
for my $i (0 .. $#palabras2){
 
if ($vreg1 == 1) {
  if(defined($palabras2[$i]) &&  ($palabras2[$i] =~ /[A-Z]/)){
      $indiceact1 = $i;
      $vreg1 = 0;
     if ($indicepas1+1 == $indiceact1) {
      $palabras2[$indicepas1] = $palabras2[$indicepas1] . " " . $palabras2[$indiceact1];
       splice(@palabras2, $indiceact1, 1);
       }
   }
  }
  
if ($vreg1 == 0) {
  if(defined($palabras2[$i]) && ($palabras2[$i] =~ /[A-Z]/)){
      $indicepas1 = $i;
        $vreg1 = 1;     
    } 
  }

  }
 }

my $indic = 1;
my $indic_ref = \$indic;
#"INSERT INTO `historial`(`fecha`, `hora`, `temp`, `hum`, `pnm`, `dd`, `ff`, `nombre`)"
my $fechareal = " ";
my $fechareal_ref = \$fechareal;
my $hora = " ";
my $hora_ref = \$hora;
my $temperatura = " ";
my $temperatura_ref = \$temperatura;
my $hum = " ";
my $hum_ref = \$hum;
my $pnm = " ";
my $pnm_ref = \$pnm;
my $dd = " ";
my $dd_ref = \$dd;
my $ff = " ";
my $ff_ref = \$dd;
my $name = " ";
my $name_ref = \$name;

my $yest = $mday - 1; 
for my $i (0 .. $#palabras2){
   switch($indic) {
    case ("1")            { $fechareal= "$year/$mon/$yest"; print "aca1" . "\n"; $indic = 2}
    case ("2")            { $hora = $palabras2[$i] . ":00:" . "00"; print $palabras2[$i] . "\n";$indic = 3;}
    case ("3")            { $temperatura = $palabras2[$i];print  $palabras2[$i] . "\n";$indic = 4;}
    case ("4")            { $hum = $palabras2[$i];print $palabras2[$i] . "\n"; $indic = 5;}
    case ("5")            { $pnm = $palabras2[$i];print $palabras2[$i] . "\n"; $indic = 6;}
    case ("6")            { $dd = $palabras2[$i];print $palabras2[$i] . "\n"; $indic = 7;}
    case ("7")            { $ff = $palabras2[$i];print $palabras2[$i] . "\n"; $indic = 8;}
    case ("8")            { $name = $palabras2[$i];print $palabras2[$i] . "\n"; $indic = 1; $sth2->execute($fechareal, $hora, $temperatura, $hum, $pnm, $dd, $ff, $name);}
    }
 }  
}
 close (FILE);
$dbh2->disconnect();
#.............................................................................
#.............................................................................
#.............................................................................
#.............................................................................
my $url5dias = 'https://ssl.smn.gob.ar/dpd/zipopendata.php?dato=pron5d ';
my $cincodias = '5d' . '.zip';
getstore( $url5dias, $cincodias );
#aqui se almacena el archivo
my $zip2 = Archive::Zip->new($cincodias);
foreach my $member ($zip2-> members)
{
    next if $member->isDirectory;
    (my $extractName = $member->fileName) =~ s{.*/}{};
    $member->extractToFileNamed(
      "$destinationDirectory/cincodias.txt");
}
#se extrae el archivo

#generamos nuestra base de datos, sus puertos, usuario, pw y nombre ya fueron creados
my $dbname1 = 'cincodias';
#nos conectamos y la preparamos para agregar los datos
my $dbh1 = DBI->connect("DBI:mysql:database=$dbname1;host=$dbhost", $dbuser, $dbpwd, {RaiseError => 1});
my $sth1 = $dbh1->prepare(
         "INSERT INTO `cincodias`(`nombre`, `fecha`, `hora`, `temp`, `vientoDir`, `velViento`, `lluvia`)
         VALUES (?,?,?,?,?,?,?)"
         );

 $dbh1 -> do ("truncate table cincodias");
 
 #vamos a leer linea a linea el archivo original y el nuevo
 my $linea;
#abrimos y quitamos de en medio todo lo que no nos sirve del mismo escribiendo un nuevo archivo
open (OUT, '>C:\Users\Juan Nahuel Hidalgo\Desktop\Gral\paradigmas\2dotp\txt\cincodias2.txt') || die "Can't open this shit";
open (FILE, 'C:\Users\Juan Nahuel Hidalgo\Desktop\Gral\paradigmas\2dotp\txt\cincodias.txt') || die "Can't open this shit";
while ($linea= <FILE>) {
  chomp($linea);

#esto sustituve la barra media, el igual y el asterisco por un espacio vacio.
$linea =~ s/[|=*(),]//g;
#esto sustituye barra baja por un espacio.
$linea =~ s/[_]/ /g;


#quitamos distintas cosas molestas (esto puede ser mejorado pero no encontre la forma)
$linea =~ s/ Producto basado en un modelo de pronÃ³stico numÃ©rico del tiempo//g;
$linea =~ s/ por lo tanto puede diferir del pronostico emitido por el SMN//g;
 $linea =~ s/      FECHA           TEMPERATURA      VIENTO      PRECIPITACIONmm//g;
  my $hola = "DIR  KM/H";
  $linea =~ s/$hola//g;
  my $hs = "Hs.";
  $linea =~ s/$hs//g;

  
    print OUT $linea;
  
}
 close (FILE);
 close (OUT);


 #aqui se busca el nombre del archivo viejo si existiera para eliminarlo
$rootdir = 'C:\Users\Juan Nahuel Hidalgo\Desktop\Gral\paradigmas\2dotp\txt\cincodias.txt';
 unlink ($rootdir);



#Abrimos el archivo ya procesado para parsear
open (FILE, 'C:\Users\Juan Nahuel Hidalgo\Desktop\Gral\paradigmas\2dotp\txt\cincodias2.txt') || die "Can't open this shit";
while ($linea= <FILE>) {
  chomp($linea);
 
 #llenaremos un array con cada conjunto de caracteres separados por un espacio
 my @palabras = split(/\s+/, $linea);

shift(@palabras);

   for my $i (0 .. $#palabras)
{
     $b = $i - 1; #valor anterior
        #i es el valor actual
       $a = $i + 1; #valor siguiente
    my $fechamon;
  switch($mon) {
    case ("1")            { $fechamon = "ENE";}
    case ("2")            { $fechamon = "FEB";}
    case ("3")          { $fechamon = "MAR"; }
    case ("4")          {$fechamon = "ABR"; }
    case ("5")          { $fechamon = "MAY"; }
    case ("6")          {$fechamon= "JUN"; }
    case ("7")          { $fechamon = "JUL"; }
    case ("8")          { $fechamon = "AGO" ; }
    case ("9")          { $fechamon = "SEP";  }
    case ("10")          { $fechamon = "OCT"; }
    case ("11")          { $fechamon = "NOV"; }
    case ("12")          { $fechamon = "DIC"; }
}
    if (($palabras[ $i ] =~ /$fechamon/)){
    $palabras[$i] = "$year/$mon/$mday";
      }
          
}
   

my $indicepas = 0;
my $indice_ref = \$indicepas;
my $indiceact = 0;
my $indicea_ref = \$indiceact;

my $vreg = 0;
my $vreg_ref = \$vreg;

for my $a(0 .. 2){
for my $i (0 .. $#palabras){
 
if ($vreg == 1) {
  if(defined($palabras[$i]) &&  ($palabras[$i] =~ /[A-Z]/)){
      $indiceact = $i;
      $vreg = 0;
     if ($indicepas+1 == $indiceact) {
      $palabras[$indicepas] = $palabras[$indicepas] . " " . $palabras[$indiceact];
       splice(@palabras, $indiceact, 1);
       }
   }
  }
  
if ($vreg == 0) {
  if(defined($palabras[$i]) && ($palabras[$i] =~ /[A-Z]/)){
      $indicepas = $i;
        $vreg = 1;     
    } 
  }

 }
}

my $indicador = 1;
my $indicador_ref = \$indicador;
#"INSERT INTO `cincodias`(`nombre`, `fecha`, `hora`, `temp`, `vientoDir`, `velViento`, `lluvia`)"
my $namecinco = " ";
my $namecinco_ref = \$namecinco;
my $fechamal = " ";
my $fechamal_ref = \$fechamal;
my $horamal = " ";
my $horamal_ref = \$horamal;
my $temp = " ";
my $temp_ref = \$temp;
my $direccion = " ";
my $direccion_ref = \$direccion;
my $viento = " ";
my $viento_ref = \$viento;
my $lluvia = " ";
my $lluvia_ref = \$lluvia;


for my $i (0 .. $#palabras){
# declaramos las variables que usaremos a la hora de parsear la informacion


   switch($indicador) {
    case ("1")            { if ($palabras[$i] =~ /[A-Z]/){
                               $namecinco = $palabras[$i];
                               $indicador = 7;}
                           else{
                                              $fechamal = $palabras[$i]; $indicador = 2;}
                           }
    case ("2")            { $horamal = $palabras[$i] . ":00:" . "00"; $indicador = 3;}
    case ("3")            { $temp = $palabras[$i]; $indicador = 4;}
    case ("4")            { $direccion = $palabras[$i]; $indicador = 5;}
    case ("5")            { $viento = $palabras[$i]; $indicador = 6;}
    case ("6")            { $lluvia = $palabras[$i]; $indicador = 7; $sth1->execute($namecinco, $fechamal, $horamal, $temp, $direccion, $viento, $lluvia);}
    case ("7")            { $indicador = 2; $fechamal = $palabras[$i];}
    }
   
 }

}
 close (FILE);
 
#Desconectar la base de datos
$dbh1->disconnect();
#aqui se busca el nombre del archivo viejo si existiera para eliminarlo
$rootdir = 'C:\Users\Juan Nahuel Hidalgo\Desktop\Gral\paradigmas\2dotp\txt\historial.txt';
unlink ($rootdir);
